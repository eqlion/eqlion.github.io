{"version":3,"sources":["src/util/colors.ts","src/hooks/useIsPhone.ts","src/hooks/useFont.ts","src/UIKit/BulletListItem.tsx","src/UIKit/Container.tsx","src/UIKit/Text.tsx","src/UIKit/Link.tsx","src/UIKit/UnderlinedText.tsx","src/UIKit/DateInfo.tsx","src/hooks/useTimeDiff.ts","src/UIKit/Screen.tsx","src/UIKit/LanguageSwitch.tsx","src/UIKit/Title.tsx","src/components/About/AboutText.tsx","src/components/About/About.tsx","src/components/Contacts/ContactsText.tsx","src/components/Contacts/Contacts.tsx","src/components/Education/Itmo.tsx","src/components/Education/EducationText.tsx","src/components/Education/Education.tsx","src/components/Experience/Sixhands.tsx","src/components/Experience/SberMarket.tsx","src/components/Experience/Tabby.tsx","src/components/Experience/ExperienceText.tsx","src/components/Experience/Experience.tsx","src/i18n/index.ts","src/i18n/en.ts","App.tsx"],"names":["COLORS","useIsPhone","useWindowDimensions","width","useFont","w","height","isPhone","PixelRatio","roundToNearestPixel","StyleSheet","create","bullet","borderRadius","backgroundColor","white","marginRight","container","flexDirection","marginBottom","fontFamily","regular","bold","light","medium","Text","style","type","children","props","fontSize","styles","text","color","Link","url","href","hrefAttrs","target","accessibilityRole","link","purple","UnderlinedText","background","View","underline","Comma","DateInfo","dateStart","dateEnd","place","position","stack","diff","t","useTranslation","end","dayjs","dateDiffM","Math","floor","dateDiffY","result","push","count","join","useTimeDiff","line","green","split","replaceAll","secondLine","peachy","format","notes","fontStyle","marginLeft","marginTop","alignItems","Screen","justifyContent","highlight","zIndex","flag","textAlign","textAlignVertical","flex","paddingHorizontal","paddingTop","Title","AboutText","age","Date","getTime","getFullYear","About","titleContainer","LINKS","ContactsText","map","index","flexBasis","flexWrap","Contacts","Itmo","EducationText","Education","Sixhands","SberMarket","Tabby","ExperienceText","Experience","i18n","use","initReactI18next","init","fallbackLng","debug","resources","en","translation","title","telegram","email","linkedin","github","resume","itmo","thesis","sbermarket","sixhands","tabby","ios","reactNative","Util","showMore","showLess","year_one","year_few","year_many","year_other","month_one","month_few","month_many","month_other","App","useFonts","FiraCode_300Light","FiraCode_700Bold","FiraCode_400Regular","FiraCode_500Medium","Helmet","name","content","extend","customParseFormat"],"mappings":"+IAAYA,E,oFCECC,EAAa,WAEtB,OADkBC,oBAAVC,MACO,KCDNC,EAAU,SAACC,GACpB,MAA0BH,oBAAlBC,EAAK,EAALA,MAAOG,EAAM,EAANA,OACTC,EAAUN,IAChB,OAAOO,UAAWC,oBACbJ,GAAKE,EAAUJ,EAAQG,IAAYC,EAAU,IAAM,O,SFG3D,SAVWP,KAAM,qBAANA,EAAM,iBAANA,EAAM,eAANA,EAAM,cAANA,EAAM,iBAANA,EAAM,gBAANA,EAAM,eAANA,EAAM,iBAANA,EAAM,aAUjB,CAVWA,MAAM,K,cG4BHU,UAAWC,OAAO,CAC7BC,OAAQ,CACJC,aAAc,IACdC,gBAAiBd,EAAOe,MACxBC,YAAa,IAEjBC,UAAW,CACPC,cAAe,MACff,MAAO,UC3BAO,UAAWC,OAAO,CAC7BM,UAAW,CACPE,aAAc,M,woBCItB,IAAMC,EAAa,CACfC,QAAS,sBACTC,KAAM,mBACNC,MAAO,oBACPC,OAAQ,sBAGNC,EAAkB,SAAH,GAAyD,IAAnDC,EAAK,EAALA,MAAM,EAAD,EAAEC,YAAI,MAAG,UAAS,EAAEC,EAAQ,EAARA,SAAaC,EAAK,SAC5DC,EAAW1B,EAAQ,IACzB,OACI,cAAC,UAAW,KACRsB,MAAO,CACH,CAAEN,WAAYA,EAAWO,GAAOG,YAChCC,EAAOC,KACPN,IAEAG,GAAK,aACRD,MAOPG,EAASrB,UAAWC,OAAO,CAC7BqB,KAAM,CACFC,MAAOjC,EAAOe,S,slBC/BtB,IAAMmB,EAAkB,SAAH,OAAMC,EAAG,EAAHA,IAAKP,EAAQ,EAARA,SAAaC,EAAK,gBAC9C,cAAC,EAAI,OACGA,GAAK,IACTO,KAAMD,EACNE,UAAW,CAAEC,OAAQ,SACrBC,kBAAkB,OAClBb,MAAOK,EAAOS,KAAK,SAClBZ,MAMHG,EAASrB,UAAWC,OAAO,CAC7B6B,KAAM,CAAEP,MAAOjC,EAAOyC,U,umBCf1B,IAAMC,EAA4B,SAAH,GAMxB,IALHT,EAAK,EAALA,MACAL,EAAQ,EAARA,SACAD,EAAI,EAAJA,KACAD,EAAK,EAALA,MACGG,EAAK,SAEFc,EAAa,CAAE7B,gBAAiBmB,GACtC,OACI,eAACW,EAAA,QAAI,WACD,cAAC,EAAI,KAACjB,KAAMA,EAAMD,MAAOA,GAAWG,GAAK,aACpCD,KAEL,cAACgB,EAAA,QAAI,CAAClB,MAAO,CAACiB,EAAYZ,EAAOc,iBAOvCd,EAASrB,UAAWC,OAAO,CAC7BkC,UAAW,CACP1C,MAAO,OACPG,OAAQ,KCZVwC,EAAQ,WAAH,OAAS,cAAC,EAAI,kBAEnBC,EAAyC,SAAH,GAQrC,IAAD,EAPFC,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAC,EAAK,EAALA,MACAC,EAAQ,EAARA,SACAC,EAAK,EAALA,MACAjB,EAAG,EAAHA,IACAP,EAAQ,EAARA,SAEMyB,EC5BiB,SAACL,EAAwBC,GAChD,IAAQK,EAAMC,2BAAND,EACFE,EAAa,MAAPP,IAAWQ,MACnBC,EAAYC,KAAKC,MAAMJ,EAAIH,KAAKL,EAAW,UACzCa,EAAYF,KAAKC,MAAMF,EAAY,IAGnCI,EAAmB,GAUzB,OAZAJ,GAAa,IAIG,GACZI,EAAOC,KAAKT,EAAE,aAAc,CAAEU,MAAON,KAGrCG,EAAY,GACZC,EAAOC,KAAKT,EAAE,YAAa,CAAEU,MAAOH,KAGjCC,EAAOG,KAAK,MDWNC,CAAYlB,EAAWC,GACpC,OACI,eAACL,EAAA,QAAI,CAAClB,MAAOK,EAAOd,UAAU,UAC1B,eAAC2B,EAAA,QAAI,CAAClB,MAAOK,EAAOoC,KAAK,UACpBjB,EACG,qCACI,cAAC,EAAc,CACXjB,MAAOjC,EAAOoE,MACd1C,MAAOK,EAAOmB,MAAM,SACnBA,IAEL,cAAC,EAAK,OAEV,KACHf,EACG,qCACI,cAAC,EAAI,CAACA,IAAKA,EAAI,SACVA,EAAIkC,MAAM,OAAO,GAAGC,WAAW,IAAK,MAEzC,cAAC,EAAK,OAEV,QAER,eAAC1B,EAAA,QAAI,CAAClB,MAAO,CAACK,EAAOoC,KAAMpC,EAAOwC,YAAY,UAC1C,cAAC,EAAc,CAACtC,MAAOjC,EAAOwE,OAAQ7C,KAAK,OAAM,SAC5CwB,IAEL,cAAC,EAAI,cAAMH,EAAUyB,OAAO,YAAW,UACR,OADQ,EAC5B,MAAPxB,OAAO,EAAPA,EAASwB,OAAO,aAAW,EAAI,UAAG,MAChCpB,IACN,cAAC,EAAI,UAAED,EAAQ,cAAC,EAAI,UAAEA,IAAgB,UAE1C,cAACR,EAAA,QAAI,CAAClB,MAAOK,EAAO2C,MAAM,SAAE9C,QAOlCG,EAASrB,UAAWC,OAAO,CAC7BM,UAAW,CACPd,MAAO,OACPgB,aAAc,IAElBgD,KAAM,CAAEjD,cAAe,MAAOC,aAAc,GAC5C+B,MAAO,CACHyB,UAAW,UAEfD,MAAO,CACHvE,MAAO,MACPyE,WAAY,KACZC,UAAW,GAEfN,WAAY,CACRK,WAAY,KACZ1D,cAAe,SACf4D,WAAY,gBElFdC,G,6CC6ESrE,UAAWC,OAAO,CAC7BM,UAAW,CACPC,cAAe,MACf8D,eAAgB,gBAChBF,WAAY,UAEhBG,UAAW,CACPnE,gBAAiB,YACjBD,aAAc,IACdsC,SAAU,WACV+B,QAAS,IAEbC,KAAM,CACFC,UAAW,SACXC,kBAAmB,SACnBC,KAAM,EACNlE,WAAY,yBD7FkB,SAAH,GAAsB,IAAhBQ,EAAQ,EAARA,SAE/BF,EAAQ,CACV6D,kBAFYtF,IAEiB,GAAK,OAEtC,OAAO,cAAC2C,EAAA,QAAI,CAAClB,MAAO,CAACK,EAAOd,UAAWS,GAAO,SAAEE,MAK9CG,EAASrB,UAAWC,OAAO,CAC7BM,UAAW,CACPqE,KAAM,EACNxE,gBAAiBd,EAAO2C,WACxB6C,WAAY,MEVdC,EAAsC,SAAH,GAA6B,IAAvB7D,EAAQ,EAARA,SAAUF,EAAK,EAALA,MAC/CI,EAAW1B,EAAQ,IACzB,OACI,cAACwC,EAAA,QAAI,UACD,cAAC,EAAI,CAACjB,KAAK,OAAOD,MAAO,CAACA,EAAO,CAAEI,aAAY,SAC1CF,OCLX8D,EAAgB,WAClB,IAAQpC,EAAMC,2BAAND,EACR,OAAO,cAAC,EAAI,UAAEA,EAAE,aAAc,CAAEqC,IANhC,IAAIC,MACA,IAAIA,MAAOC,UAAY,IAAID,KAAK,cAAcC,WAChDC,cAAgB,UCDhBC,EAAY,WACd,IAAQzC,EAAMC,2BAAND,EACR,OACI,eAACV,EAAA,QAAI,CAAClB,MAAOK,EAAOd,UAAU,UAC1B,cAAC2B,EAAA,QAAI,CAAClB,MAAOK,EAAOiE,eAAe,SAC/B,cAAC,EAAK,UAAE1C,EAAE,mBAEd,cAAC,EAAS,QAOhBvB,EAASrB,UAAWC,OAAO,CAC7BM,UAAW,CACPE,aAAc,IAElB6E,eAAgB,CACZ9E,cAAe,MACf8D,eAAgB,gBAChBF,WAAY,YCtBdmB,EAAQ,CACV,CAAE9D,IAAK,sBAAuBH,KAAM,qBACpC,CAAEG,IAAK,gCAAiCH,KAAM,kBAC9C,CACIG,IAAK,sDACLH,KAAM,qBAEV,CAAEG,IAAK,6BAA8BH,KAAM,mBAC3C,CACIG,IAAK,mGACLH,KAAM,oBAIRkE,EAAmB,WACrB,IAAQ5C,EAAMC,2BAAND,EACR,OACI,cAACV,EAAA,QAAI,CAAClB,MAAOK,EAAOd,UAAU,SACzBgF,EAAME,KAAI,WAAgBC,GAAK,IAAlBjE,EAAG,EAAHA,IAAKH,EAAI,EAAJA,KAAI,OACnB,cAAC,EAAI,CAACG,IAAKA,EAAI,SACVmB,EAAEtB,IADcoE,SAU/BrE,EAASrB,UAAWC,OAAO,CAC7BM,UAAW,CACPoF,UAAW,IACXnF,cAAe,MACfoF,SAAU,OACVtB,eAAgB,mBCjClBuB,EAAe,WACjB,IAAQjD,EAAMC,2BAAND,EACR,OACI,eAACV,EAAA,QAAI,CAAClB,MAAOK,EAAOd,UAAU,UAC1B,cAAC,EAAK,UAAEqC,EAAE,oBACV,cAAC,EAAY,QAOnBvB,EAASrB,UAAWC,OAAO,CAC7BM,UAAW,CACPE,aAAc,MCdhBqF,EAAW,WACb,IAAQlD,EAAMC,2BAAND,EACR,OACI,cAAC,EAAQ,CACLN,UAAWS,IAAM,WAAY,YAC7BR,QAASQ,IAAM,WAAY,YAC3BN,SAAUG,EAAE,2BACZJ,MAAOI,EAAE,wBACTF,MAAOE,EAAE,wBAAwB,SACjC,eAAC,EAAI,WACD,cAAC,EAAI,CAACnB,IAAI,6CAA4C,SACjDmB,EAAE,yBAENA,EAAE,+BCdbmD,GAAoB,WACtB,OACI,cAAC7D,EAAA,QAAI,UACD,cAAC,EAAI,OCFX8D,GAAgB,WAClB,IAAQpD,EAAMC,2BAAND,EACR,OACI,eAACV,EAAA,QAAI,CAAClB,MAAOK,GAAOd,UAAU,UAC1B,cAAC,EAAK,UAAEqC,EAAE,qBACV,cAAC,GAAa,QAOpBvB,GAASrB,UAAWC,OAAO,CAC7BM,UAAW,CACPE,aAAc,MCdhBwF,GAAe,WACjB,IAAQrD,EAAMC,2BAAND,EACR,OACI,cAAC,EAAQ,CACLJ,MAAM,WACNf,IAAI,uBACJgB,SAAS,iCACTH,UAAWS,IAAM,WAAY,YAC7BR,QAASQ,IAAM,WAAY,YAAY,SACvC,cAAC,EAAI,UAAEH,EAAE,iCCRfsD,GAAiB,WACnB,IAAQtD,EAAMC,2BAAND,EACR,OACI,cAAC,EAAQ,CACLJ,MAAM,aACNf,IAAI,yBACJgB,SAAS,0BACTF,QAASQ,IAAM,WAAY,YAC3BT,UAAWS,IAAM,WAAY,YAAY,SACzC,cAAC,EAAI,UAAEH,EAAE,8BCRfuD,GAAY,WACd,IAAQvD,EAAMC,2BAAND,EACR,OACI,qCACI,cAAC,EAAQ,CACLJ,MAAM,QACNC,SAAS,oBACThB,IAAI,mBACJa,UAAWS,IAAM,WAAY,YAAY,SACzC,cAAC,EAAI,UAAEH,EAAE,4BAEb,cAAC,EAAQ,CACLH,SAAS,2BACTH,UAAWS,IAAM,WAAY,YAC7BR,QAASQ,IAAM,WAAY,YAAY,SACvC,cAAC,EAAI,UAAEH,EAAE,wCChBnBwD,GAAqB,WACvB,OACI,eAAClE,EAAA,QAAI,WACD,cAAC,GAAK,IACN,cAAC,GAAU,IACX,cAAC,GAAQ,QCLfmE,GAAiB,WACnB,IAAQzD,EAAMC,2BAAND,EACR,OACI,eAACV,EAAA,QAAI,CAAClB,MAAOK,GAAOd,UAAU,UAC1B,cAAC,EAAK,UAAEqC,EAAE,sBACV,cAAC,GAAc,QAOrBvB,GAASrB,UAAWC,OAAO,CAC7BM,UAAW,CACPE,aAAc,M,mBChBjB6F,WAAKC,IAAIC,oBAAkBC,KAAK,CACjCC,YAAa,KACbC,OAAO,EACPC,UAAW,CAAEC,GAAI,CAAEC,YCRL,CACdzB,MAAO,CACH0B,MAAO,QAEPzF,KAAM,wVAEVuE,SAAU,CACNkB,MAAO,oBACPC,SAAU,WACVC,MAAO,QACPC,SAAU,WACVC,OAAQ,SACRC,OAAQ,UAEZpB,UAAW,CACPqB,KAAM,CACF5E,SAAU,WACVD,MAAO,kBACPE,MAAO,yCACP4E,OAAQ,mKACRxF,KAAM,uBAEViF,MAAO,aAEXV,WAAY,CACRU,MAAO,aACPQ,WACI,iaACJC,SAAU,CACNlG,KAAM,8TAEVmG,MAAO,CACHC,IAAK,qUACLC,YACI,gVAGZC,KAAM,CACFC,SAAU,YACVC,SAAU,YACVC,SAAU,iBACVC,SAAU,kBACVC,UAAW,kBACXC,WAAY,kBACZC,UAAW,kBACXC,UAAW,mBACXC,WAAY,mBACZC,YAAa,yBDpCNhC,GAAI,QEUJ,SAASiC,KAQpB,OAPAC,mBAAS,CACLC,sCACAC,oCACAC,0CACAC,0CAIA,qCACI,eAACC,EAAA,OAAM,WACH,iDACA,sBAAMC,KAAK,cAAcC,QAASzJ,EAAO2C,gBAE7C,eAAC,EAAM,WACH,cAAC,EAAK,IACN,cAAC,EAAQ,IACT,cAAC,GAAU,IACX,cAAC,GAAS,UA5B1Bc,IAAMiG,OAAOC,M","file":"static/js/app.89ff93f1.chunk.js","sourcesContent":["export enum COLORS {\n    background = '#1c1e26',\n    purple = '#B877DB',\n    gray = '#b2b2b3',\n    red = '#F43E5C',\n    peachy = '#fac29a',\n    green = '#27D796',\n    blue = '#21BFC2',\n    orange = '#F77D26',\n    white = '#fff',\n}\n","import { useWindowDimensions } from 'react-native';\n\nexport const useIsPhone = () => {\n    const { width } = useWindowDimensions();\n    return width < 769;\n};\n","import { PixelRatio, useWindowDimensions } from 'react-native';\nimport { useIsPhone } from './useIsPhone';\n\nexport const useFont = (w: number) => {\n    const { width, height } = useWindowDimensions();\n    const isPhone = useIsPhone();\n    return PixelRatio.roundToNearestPixel(\n        (w * (isPhone ? width : height)) / (isPhone ? 414 : 769),\n    );\n};\n","import React, { FC, PropsWithChildren } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useFont } from '@hooks';\nimport { COLORS } from '../util/colors';\n\nconst Bullet = () => {\n    const size = useFont(5);\n    return (\n        <View\n            style={[\n                styles.bullet,\n                { marginTop: size + 1, width: size, height: size },\n            ]}\n        />\n    );\n};\n\nconst BulletListItem: FC<PropsWithChildren> = ({ children }) => {\n    return (\n        <View style={styles.container}>\n            <Bullet />\n            {children}\n        </View>\n    );\n};\n\nexport { BulletListItem };\n\nconst styles = StyleSheet.create({\n    bullet: {\n        borderRadius: 1000,\n        backgroundColor: COLORS.white,\n        marginRight: 10,\n    },\n    container: {\n        flexDirection: 'row',\n        width: '100%',\n    },\n});\n","import React, { FC, PropsWithChildren } from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nconst Container: FC<PropsWithChildren> = ({ children }) => (\n    <View style={styles.container}>{children}</View>\n);\n\nexport { Container };\n\nconst styles = StyleSheet.create({\n    container: {\n        marginBottom: 16,\n    },\n});\n","import React, { FC } from 'react';\nimport { StyleSheet, Text as DefaultText, TextProps } from 'react-native';\nimport { useFont } from '@hooks';\nimport { COLORS } from '../util/colors';\n\nexport type FontWeight = 'bold' | 'light' | 'regular' | 'medium';\n\ntype Props = {\n    type?: FontWeight;\n    href?: string;\n    hrefAttrs?: {\n        target: string;\n    };\n} & TextProps;\n\nconst fontFamily = {\n    regular: 'FiraCode_400Regular',\n    bold: 'FiraCode_700Bold',\n    light: 'FiraCode_300Light',\n    medium: 'FiraCode_500Medium',\n};\n\nconst Text: FC<Props> = ({ style, type = 'regular', children, ...props }) => {\n    const fontSize = useFont(13);\n    return (\n        <DefaultText\n            style={[\n                { fontFamily: fontFamily[type], fontSize },\n                styles.text,\n                style,\n            ]}\n            {...props}>\n            {children}\n        </DefaultText>\n    );\n};\n\nexport { Text };\n\nconst styles = StyleSheet.create({\n    text: {\n        color: COLORS.white,\n    },\n});\n","import React, { FC } from 'react';\nimport { TextProps, StyleSheet } from 'react-native';\nimport { COLORS } from '../util/colors';\n\nimport { Text } from './Text';\n\ntype Props = {\n    url: string;\n} & TextProps;\n\nconst Link: FC<Props> = ({ url, children, ...props }) => (\n    <Text\n        {...props}\n        href={url}\n        hrefAttrs={{ target: 'blank' }}\n        accessibilityRole=\"link\"\n        style={styles.link}>\n        {children}\n    </Text>\n);\n\nexport { Link };\n\nconst styles = StyleSheet.create({\n    link: { color: COLORS.purple },\n});\n","import React, { FC } from 'react';\nimport { View, StyleSheet, TextProps } from 'react-native';\nimport { FontWeight, Text } from './Text';\n\ntype Props = {\n    color: string;\n    type?: FontWeight;\n} & TextProps;\n\nconst UnderlinedText: FC<Props> = ({\n    color,\n    children,\n    type,\n    style,\n    ...props\n}) => {\n    const background = { backgroundColor: color };\n    return (\n        <View>\n            <Text type={type} style={style} {...props}>\n                {children}\n            </Text>\n            <View style={[background, styles.underline]} />\n        </View>\n    );\n};\n\nexport { UnderlinedText };\n\nconst styles = StyleSheet.create({\n    underline: {\n        width: '100%',\n        height: 1,\n    },\n});\n","import React, { FC, PropsWithChildren } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport dayjs from 'dayjs';\n\nimport { Link } from './Link';\nimport { Text } from './Text';\nimport { UnderlinedText } from './UnderlinedText';\n\nimport { COLORS } from '../util/colors';\nimport { useTimeDiff } from '../hooks/useTimeDiff';\n\ntype Props = {\n    dateStart: dayjs.Dayjs;\n    dateEnd?: dayjs.Dayjs;\n    place?: string;\n    position: string;\n    stack?: string;\n    url?: string;\n};\n\nconst Comma = () => <Text>, </Text>;\n\nconst DateInfo: FC<PropsWithChildren<Props>> = ({\n    dateStart,\n    dateEnd,\n    place,\n    position,\n    stack,\n    url,\n    children,\n}) => {\n    const diff = useTimeDiff(dateStart, dateEnd);\n    return (\n        <View style={styles.container}>\n            <View style={styles.line}>\n                {place ? (\n                    <>\n                        <UnderlinedText\n                            color={COLORS.green}\n                            style={styles.place}>\n                            {place}\n                        </UnderlinedText>\n                        <Comma />\n                    </>\n                ) : null}\n                {url ? (\n                    <>\n                        <Link url={url}>\n                            {url.split('://')[1].replaceAll('/', '')}\n                        </Link>\n                        <Comma />\n                    </>\n                ) : null}\n            </View>\n            <View style={[styles.line, styles.secondLine]}>\n                <UnderlinedText color={COLORS.peachy} type=\"bold\">\n                    {position}\n                </UnderlinedText>\n                <Text>{`(${dateStart.format('MM, YYYY')}–${\n                    dateEnd?.format('MM, YYYY') ?? '…'\n                }), ${diff}`}</Text>\n                <Text>{stack ? <Text>{stack}</Text> : null}</Text>\n            </View>\n            <View style={styles.notes}>{children}</View>\n        </View>\n    );\n};\n\nexport { DateInfo };\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '100%',\n        marginBottom: 20,\n    },\n    line: { flexDirection: 'row', marginBottom: 4 },\n    place: {\n        fontStyle: 'italic',\n    },\n    notes: {\n        width: '95%',\n        marginLeft: '5%',\n        marginTop: 8,\n    },\n    secondLine: {\n        marginLeft: '5%',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n    },\n});\n","import dayjs from 'dayjs';\nimport { useTranslation } from 'react-i18next';\n\nexport const useTimeDiff = (dateStart: dayjs.Dayjs, dateEnd?: dayjs.Dayjs) => {\n    const { t } = useTranslation();\n    const end = dateEnd ?? dayjs();\n    let dateDiffM = Math.floor(end.diff(dateStart, 'month'));\n    const dateDiffY = Math.floor(dateDiffM / 12);\n    dateDiffM %= 12;\n\n    const result: string[] = [];\n\n    if (dateDiffM > 0) {\n        result.push(t('Util.month', { count: dateDiffM }));\n    }\n\n    if (dateDiffY > 0) {\n        result.push(t('Util.year', { count: dateDiffY }));\n    }\n\n    return result.join(', ');\n};\n","import React, { FC, PropsWithChildren } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useIsPhone } from '../hooks/useIsPhone';\nimport { COLORS } from '../util/colors';\n\nconst Screen: FC<PropsWithChildren> = ({ children }) => {\n    const isPhone = useIsPhone();\n    const style = {\n        paddingHorizontal: isPhone ? 16 : '20%',\n    };\n    return <View style={[styles.container, style]}>{children}</View>;\n};\n\nexport { Screen };\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: COLORS.background,\n        paddingTop: 32,\n    },\n});\n","import React, { FC, useCallback, useEffect } from 'react';\nimport { Pressable, StyleSheet } from 'react-native';\nimport Animated, {\n    useSharedValue,\n    useAnimatedStyle,\n    withTiming,\n    interpolate,\n    interpolateColor,\n} from 'react-native-reanimated';\n\nimport { useFont } from '@hooks';\nimport { COLORS } from '../util/colors';\nimport { useTranslation } from 'react-i18next';\n\nconst LanguageSwitch: FC = () => {\n    const {\n        i18n: { changeLanguage, language },\n    } = useTranslation();\n    const isEn = language === 'en';\n    const node = useSharedValue(isEn ? 0 : 1);\n\n    useEffect(() => {\n        node.value = withTiming(isEn ? 0 : 1);\n    }, [isEn, node]);\n\n    const handleChangeLanguage = useCallback(() => {\n        if (isEn) {\n            void changeLanguage('ru');\n        } else {\n            void changeLanguage('en');\n        }\n    }, [changeLanguage, isEn]);\n\n    const fontSize = useFont(13);\n\n    const width = useFont(22) * 1.3;\n\n    const style = useAnimatedStyle(() => ({\n        left: interpolate(node.value, [0, 1], [0, width]),\n    }));\n\n    const enStyle = useAnimatedStyle(() => ({\n        color: interpolateColor(\n            node.value,\n            [0, 1],\n            [COLORS.background, COLORS.white],\n        ),\n    }));\n\n    const ruStyle = useAnimatedStyle(() => ({\n        color: interpolateColor(\n            node.value,\n            [0, 1],\n            [COLORS.white, COLORS.background],\n        ),\n    }));\n\n    return (\n        <Pressable\n            onPress={handleChangeLanguage}\n            style={[\n                {\n                    width: width * 2,\n                    height: width,\n                },\n                styles.container,\n            ]}>\n            <Animated.View\n                style={[styles.highlight, { width, height: width }, style]}\n            />\n            <Animated.Text style={[{ width, fontSize }, styles.flag, enStyle]}>\n                EN\n            </Animated.Text>\n            <Animated.Text style={[{ width, fontSize }, styles.flag, ruStyle]}>\n                RU\n            </Animated.Text>\n        </Pressable>\n    );\n};\n\nexport { LanguageSwitch };\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    highlight: {\n        backgroundColor: '#ffffff90',\n        borderRadius: 10000,\n        position: 'absolute',\n        zIndex: -10,\n    },\n    flag: {\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        flex: 1,\n        fontFamily: 'FiraCode_400Regular',\n    },\n});\n","import React, { FC, PropsWithChildren } from 'react';\nimport { View, TextStyle, StyleProp } from 'react-native';\nimport { useFont } from '@hooks';\nimport { Text } from './Text';\n\ntype Props = {\n    style?: StyleProp<TextStyle>;\n};\n\nconst Title: FC<PropsWithChildren<Props>> = ({ children, style }) => {\n    const fontSize = useFont(22);\n    return (\n        <View>\n            <Text type=\"bold\" style={[style, { fontSize }]}>\n                {children}\n            </Text>\n        </View>\n    );\n};\n\nexport { Title };\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Text } from '@UIKit';\n\nconst calcAge = () =>\n    new Date(\n        new Date().getTime() - new Date('1999-08-05').getTime(),\n    ).getFullYear() - 1970;\n\nconst AboutText: FC = () => {\n    const { t } = useTranslation();\n    return <Text>{t('About.text', { age: calcAge() })}</Text>;\n};\n\nexport { AboutText };\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { View, StyleSheet } from 'react-native';\nimport { Title } from '@UIKit';\nimport { AboutText } from './AboutText';\n\nconst About: FC = () => {\n    const { t } = useTranslation();\n    return (\n        <View style={styles.container}>\n            <View style={styles.titleContainer}>\n                <Title>{t('About.title')}</Title>\n            </View>\n            <AboutText />\n        </View>\n    );\n};\n\nexport { About };\n\nconst styles = StyleSheet.create({\n    container: {\n        marginBottom: 32,\n    },\n    titleContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n});\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { View, StyleSheet } from 'react-native';\nimport { Link } from '@UIKit';\n\nconst LINKS = [\n    { url: 'https://t.me/eqlion', text: 'Contacts.telegram' },\n    { url: 'mailto:lapanicholas@gmail.com', text: 'Contacts.email' },\n    {\n        url: 'https://www.linkedin.com/in/nikolay-lapa-6a8607220/',\n        text: 'Contacts.linkedin',\n    },\n    { url: 'https://github.com/eqlion/', text: 'Contacts.github' },\n    {\n        url: 'https://docs.google.com/document/d/14qcVP1YD6FxWoJvDaR-wYFrcWw29k0doIaFmgudtprk/edit?usp=sharing',\n        text: 'Contacts.resume',\n    },\n];\n\nconst ContactsText: FC = () => {\n    const { t } = useTranslation();\n    return (\n        <View style={styles.container}>\n            {LINKS.map(({ url, text }, index) => (\n                <Link url={url} key={index}>\n                    {t(text)}\n                </Link>\n            ))}\n        </View>\n    );\n};\n\nexport { ContactsText };\n\nconst styles = StyleSheet.create({\n    container: {\n        flexBasis: 0.25,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n});\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { View, StyleSheet } from 'react-native';\nimport { Title } from '@UIKit';\nimport { ContactsText } from './ContactsText';\n\nconst Contacts: FC = () => {\n    const { t } = useTranslation();\n    return (\n        <View style={styles.container}>\n            <Title>{t('Contacts.title')}</Title>\n            <ContactsText />\n        </View>\n    );\n};\n\nexport { Contacts };\n\nconst styles = StyleSheet.create({\n    container: {\n        marginBottom: 32,\n    },\n});\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { DateInfo, Link, Text } from '@UIKit';\nimport dayjs from 'dayjs';\n\nconst Itmo: FC = () => {\n    const { t } = useTranslation();\n    return (\n        <DateInfo\n            dateStart={dayjs('09, 2017', 'MM, YYYY')}\n            dateEnd={dayjs('07, 2021', 'MM, YYYY')}\n            position={t('Education.itmo.position')}\n            place={t('Education.itmo.place')}\n            stack={t('Education.itmo.stack')}>\n            <Text>\n                <Link url=\"https://github.com/eqlion/bachelor-diploma\">\n                    {t('Education.itmo.link')}\n                </Link>\n                {t('Education.itmo.thesis')}\n            </Text>\n        </DateInfo>\n    );\n};\n\nexport { Itmo };\n","import React, { FC } from 'react';\nimport { View } from 'react-native';\n\nimport { Itmo } from './Itmo';\n\nconst EducationText: FC = () => {\n    return (\n        <View>\n            <Itmo />\n        </View>\n    );\n};\n\nexport { EducationText };\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { View, StyleSheet } from 'react-native';\nimport { Title } from '@UIKit';\nimport { EducationText } from './EducationText';\n\nconst Education: FC = () => {\n    const { t } = useTranslation();\n    return (\n        <View style={styles.container}>\n            <Title>{t('Education.title')}</Title>\n            <EducationText />\n        </View>\n    );\n};\n\nexport { Education };\n\nconst styles = StyleSheet.create({\n    container: {\n        marginBottom: 32,\n    },\n});\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { DateInfo, Text } from '@UIKit';\nimport dayjs from 'dayjs';\n\nconst Sixhands: FC = () => {\n    const { t } = useTranslation();\n    return (\n        <DateInfo\n            place=\"Sixhands\"\n            url=\"https://sixhands.co/\"\n            position=\"Junior/Middle React Native dev\"\n            dateStart={dayjs('07, 2020', 'MM, YYYY')}\n            dateEnd={dayjs('07, 2021', 'MM, YYYY')}>\n            <Text>{t('Experience.sixhands.text')}</Text>\n        </DateInfo>\n    );\n};\n\nexport { Sixhands };\n","import React from 'react';\nimport type { FC } from 'react';\n\nimport { DateInfo, Text } from '@UIKit';\nimport { useTranslation } from 'react-i18next';\nimport dayjs from 'dayjs';\n\nconst SberMarket: FC = () => {\n    const { t } = useTranslation();\n    return (\n        <DateInfo\n            place=\"SberMarket\"\n            url=\"https://sbermarket.ru/\"\n            position=\"Middle React Native dev\"\n            dateEnd={dayjs('04, 2022', 'MM, YYYY')}\n            dateStart={dayjs('07, 2021', 'MM, YYYY')}>\n            <Text>{t('Experience.sbermarket')}</Text>\n        </DateInfo>\n    );\n};\n\nexport { SberMarket };\n","import React from 'react';\nimport type { FC } from 'react';\n\nimport { DateInfo, Text } from '@UIKit';\nimport { useTranslation } from 'react-i18next';\n\nimport dayjs from 'dayjs';\n\nconst Tabby: FC = () => {\n    const { t } = useTranslation();\n    return (\n        <>\n            <DateInfo\n                place=\"Tabby\"\n                position=\"Senior Mobile dev\"\n                url=\"https://tabby.ai\"\n                dateStart={dayjs('12, 2022', 'MM, YYYY')}>\n                <Text>{t('Experience.tabby.ios')}</Text>\n            </DateInfo>\n            <DateInfo\n                position=\"Middle+ React Native dev\"\n                dateStart={dayjs('04, 2022', 'MM, YYYY')}\n                dateEnd={dayjs('12, 2022', 'MM, YYYY')}>\n                <Text>{t('Experience.tabby.reactNative')}</Text>\n            </DateInfo>\n        </>\n    );\n};\n\nexport { Tabby };\n","import React, { FC } from 'react';\nimport { View } from 'react-native';\n\nimport { Sixhands } from './Sixhands';\nimport { SberMarket } from './SberMarket';\nimport { Tabby } from './Tabby';\n\nconst ExperienceText: FC = () => {\n    return (\n        <View>\n            <Tabby />\n            <SberMarket />\n            <Sixhands />\n        </View>\n    );\n};\n\nexport { ExperienceText };\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { View, StyleSheet } from 'react-native';\n\nimport { Title } from '@UIKit';\nimport { ExperienceText } from './ExperienceText';\n\nconst Experience: FC = () => {\n    const { t } = useTranslation();\n    return (\n        <View style={styles.container}>\n            <Title>{t('Experience.title')}</Title>\n            <ExperienceText />\n        </View>\n    );\n};\n\nexport { Experience };\n\nconst styles = StyleSheet.create({\n    container: {\n        marginBottom: 32,\n    },\n});\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport { en } from './en';\n\nvoid i18n.use(initReactI18next).init({\n    fallbackLng: 'en',\n    debug: false,\n    resources: { en: { translation: en } },\n});\n\nexport default i18n;\n","export const en = {\n    About: {\n        title: 'About',\n        // eslint-disable-next-line quotes\n        text: \"Hey! I'm Nikolay Lapa, and I'm senior mobile developer, I specialize in React Native with TypeScript and native iOS development using Swift. I have a strong focus on product delivery and enjoy tackling complex UI's, animations, and business-logic. If you are interested in working with me, feel free to message me using the contacts bellow!\",\n    },\n    Contacts: {\n        title: 'Contacts && Links',\n        telegram: 'Telegram',\n        email: 'Email',\n        linkedin: 'LinkedIn',\n        github: 'GitHub',\n        resume: 'Resume',\n    },\n    Education: {\n        itmo: {\n            position: 'Bachelor',\n            place: 'ITMO University',\n            stack: 'Lasers in info-communicational systems',\n            thesis: ': Development of the receiving part of the uplink communication channel using Li-Fi technology. Used LaTeX for writing and Python for plotting and calculations.',\n            link: 'Thesis (in Russian)',\n        },\n        title: 'Education',\n    },\n    Experience: {\n        title: 'Experience',\n        sbermarket:\n            'Worked in android mobile team, working on delivering various features across the app. Implemented and released BNPL customer payment option in the app, including the UI layout (with complex animations), backend integration, ab-test integration. React Native, Typescript, styled-components, React Navigation, React Native Reanimated 2, custom solutions for app architecture and state-management, module approach, DI',\n        sixhands: {\n            text: 'Worked on several outsourced apps at once doing the whole development cycle on my own: layout, business-logic, building and signing, sending to tests (TestFlight), uploading to the store (AppStore, Google Play Store). React Native (bare/managed), TypeScript, react-navigation, react-native-reanimated, redux, hooks',\n        },\n        tabby: {\n            ios: 'Transitioned the app RN -> Swift, developed One-time Limit as an extension of the primary limit, added ability to update the National ID inside of the app, ability to link a bank account to improve the credit score. Swift, Combine, UIKit, MVI, Tuist, DI, coordinators/instructors, tests, ab-tests, feature-flags, analytics',\n            reactNative:\n                'Built Tabby Card on mobile: KYC, card issuing, adding card to the Wallet, complex flow with a bunch of entry and possible abandonment points. Built One-time Limit feature: added complexity for the flow, deeplink integration, heavy usage of instructor pattern. TypeScript, native modules, react-navigation, i11n, analytics, ab-tests',\n        },\n    },\n    Util: {\n        showMore: 'Show more',\n        showLess: 'Show less',\n        year_one: '{{count}} year',\n        year_few: '{{count}} years',\n        year_many: '{{count}} years',\n        year_other: '{{count}} years',\n        month_one: '{{count}} month',\n        month_few: '{{count}} months',\n        month_many: '{{count}} months',\n        month_other: '{{count}} months',\n    },\n};\n","import React from 'react';\nimport {\n    useFonts,\n    FiraCode_400Regular,\n    FiraCode_700Bold,\n    FiraCode_300Light,\n    FiraCode_500Medium,\n} from '@expo-google-fonts/fira-code';\nimport { Helmet } from 'react-helmet';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\ndayjs.extend(customParseFormat);\n\nimport { Screen } from '@UIKit';\nimport { About, Education, Experience, Contacts } from './src/components';\n\nimport { COLORS } from './src/util/colors';\n\nimport 'intl-pluralrules';\nimport './src/i18n';\n\nexport default function App() {\n    useFonts({\n        FiraCode_300Light,\n        FiraCode_700Bold,\n        FiraCode_400Regular,\n        FiraCode_500Medium,\n    });\n\n    return (\n        <>\n            <Helmet>\n                <title>Nikolay Lapa</title>\n                <meta name=\"theme-color\" content={COLORS.background} />\n            </Helmet>\n            <Screen>\n                <About />\n                <Contacts />\n                <Experience />\n                <Education />\n            </Screen>\n        </>\n    );\n}\n"],"sourceRoot":""}